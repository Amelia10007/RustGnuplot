var N=null,E="",T="t",U="u",searchIndex={};

var r_0a="Like `set_x_ticks` but for the Y axis.",r_0b="DataType",r_1a="set_cb_ticks",r_2a="Like `set_x_ticks` but for the color bar axis.",r_3a="set_x_ticks_custom",r_4a="Sets ticks on the X axis with specified labels at…",r_5a="set_y_ticks_custom",r_6a="set_cb_ticks_custom",r_7a="Like `set_x_ticks_custom` but for the the color bar axis.",r_8a="set_x_range",r_9a="Set the range of values for the X axis.",r_Aa="to_owned",r_Ab="set_cb_time",r_Ba="clone_into",r_Bb="Sets the color bar axis be time. Note that the range must…",r_Ca="clone",r_Cb="set_margins",r_Da="palettetype",r_Db="Sets the margins of the plot.",r_Ea="set_pos_grid",r_Eb="set_palette",r_Fa="Set the position of the axes on the figure using grid…",r_Fb="Sets the palette used for 3D surface and image plots",r_Ga="u32",r_Gb="set_custom_palette",r_Ha="set_pos",r_Hb="Sets a custom palette used for 3D surface and image plots.…",r_Ia="Set the position of the axes on the figure using screen…",r_Ib="Coordinate",r_Ja="set_size",r_Jb="PlotOption",r_Ka="Set the size of the axes # Arguments * `w` - Width. Ranges…",r_Kb="FillRegionType",r_La="set_aspect_ratio",r_Lb="AlignType",r_Ma="Set the aspect ratio of the axes # Arguments * `ratio` -…",r_Mb="DashType",r_Na="set_x_label",r_Nb="ArrowheadType",r_Oa="Set the label for the X axis # Arguments * `text` - Text…",r_Ob="AutoOption",r_Pa="set_y_label",r_Pb="LabelOption",r_Qa="Like `set_x_label`, but for the Y axis",r_Qb="TickOption",r_Ra="set_cb_label",r_Rb="BorderLocation2D",r_Sa="Like `set_x_label`, but for the color bar",r_Sb="MarginSide",r_Ta="set_title",r_Tb="LegendOption",r_Ua="Set the title for the axes # Arguments * `text` - Text of…",r_Ub="ContourStyle",r_Va="label",r_Vb="PaletteType",r_Wa="Adds a label to the plot, with an optional marker. #…",r_Wb="Axes2D",r_Xa="set_x_ticks",r_Xb="Axes3D",r_Ya="Sets the properties of the ticks on the X axis.",r_Yb="Figure",r_Za="set_y_ticks",r_Zb="AxesCommon",r_aa="gnuplot",r_ab="set_y_range",r_ba="If the axes are drawn on the border, this specifies…",r_bb="Set the range of values for the Y axis.",r_ca="Plot a 2D scatter-plot with a point standing in for each…",r_cb="set_x_reverse",r_da="points",r_db="Sets X axis to reverse. # Arguments * `reverse` - Boolean,…",r_ea="lines",r_eb="set_y_reverse",r_fa="lines_points",r_fb="Sets Y axis to reverse. # Arguments * `reverse` - Boolean,…",r_ga="A combination of lines and points methods (drawn in that…",r_gb="set_cb_range",r_ha="self",r_hb="Set the range of values for the color bar axis.",r_ia="autooption",r_ib="set_x_log",r_ja="bool",r_jb="Sets the X axis be logarithmic. Note that the range must…",r_ka="contourstyle",r_kb="set_y_log",r_la="figure",r_lb="Sets the Y axis be logarithmic. Note that the range must…",r_ma="axes2d",r_mb="set_cb_log",r_na="axes3d",r_nb="Sets the color bar axis be logarithmic. Note that the…",r_oa="f64",r_ob="set_x_grid",r_pa="Like `set_x_ticks_custom` but for the the Y axis.",r_pb="Shows the grid on the X axis.",r_qa="option",r_qb="set_y_grid",r_ra="result",r_rb="Shows the grid on the Y axis.",r_sa="try_from",r_sb="set_cb_grid",r_ta="borrow",r_tb="Shows the grid on the color bar axis.",r_ua="borrow_mut",r_ub="set_grid_options",r_va="try_into",r_vb="Set the grid options.",r_wa="get_type_id",r_wb="set_x_time",r_xa="typeid",r_xb="Sets the X axis be time.",r_ya="from",r_yb="set_y_time",r_za="into",r_zb="Sets the Y axis be time. Note that the range must be…";

searchIndex[r_aa]={"doc":"A simple gnuplot controller.","i":[[3,r_Wb,r_aa,"2D axes that is used for drawing 2D plots",N,N],[3,r_Xb,E,"3D axes that is used for drawing 3D plots",N,N],[3,r_Yb,E,"A figure that may contain multiple axes",N,N],[4,r_Ib,E,"Specifies how to interpret the coordinate passed to a…",N,N],[13,"Graph",E,"Coordinates are done relative to a graph (i.e. an axis…",0,N],[13,"Axis",E,"Coordinates match those on the axes. You'd use this to…",0,N],[4,r_Jb,E,"An enumeration of plot options you can supply to plotting…",N,N],[13,"PointSymbol",E,"Sets the symbol used for points. The valid characters are…",1,N],[13,"PointSize",E,"Sets the size of the points. The size acts as a…",1,N],[13,"Caption",E,"Sets the caption of the plot element. Set to empty to hide…",1,N],[13,"LineWidth",E,"Sets the width of lines.",1,N],[13,"Color",E,"Sets the color of the plot element. The passed string can…",1,N],[13,"BorderColor",E,"Sets the color of the border of a filled plot (if it has…",1,N],[13,"LineStyle",E,"Sets the style of the line. Note that not all gnuplot…",1,N],[13,"FillAlpha",E,"Sets the transparency of a filled plot. `0.0` - fully…",1,N],[13,"FillRegion",E,"Sets the fill region. See FillRegion for the available…",1,N],[13,"ArrowType",E,"Sets what an arrowhead looks like",1,N],[13,"ArrowSize",E,"Sets the size of the arrowhead. This is specified in the…",1,N],[13,"WhiskerBars",E,"Width of the whisker bars (as a fraction of the box width)…",1,N],[4,r_Kb,E,"An enumeration of possible fill regions",N,N],[13,"Above",E,E,2,N],[13,"Below",E,E,2,N],[13,"Between",E,E,2,N],[4,r_Lb,E,"An enumeration of possible text and label alignments",N,N],[13,"AlignLeft",E,E,3,N],[13,"AlignRight",E,E,3,N],[13,"AlignCenter",E,E,3,N],[13,"AlignTop",E,E,3,N],[13,"AlignBottom",E,E,3,N],[4,r_Mb,E,"An enumeration of possible dash styles",N,N],[13,"Solid",E,E,4,N],[13,"SmallDot",E,E,4,N],[13,"Dot",E,E,4,N],[13,"Dash",E,E,4,N],[13,"DotDash",E,E,4,N],[13,"DotDotDash",E,E,4,N],[4,r_Nb,E,"An enumeration of possible arrow head styles",N,N],[13,"Open",E,"An arrow head shaped like a 'V'",5,N],[13,"Closed",E,"An arrow head shaped like an outlined triangle",5,N],[13,"Filled",E,"An arrow head shaped like a filled triangle",5,N],[13,"NoArrow",E,"No arrow head",5,N],[4,r_Ob,E,"An enumeration of something that can either be fixed (e.g.…",N,N],[13,"Fix",E,"Fixes the value to a specific value",6,N],[13,"Auto",E,"Lets the value scale automatically",6,N],[4,r_Pb,E,"An enumeration of label options that control label…",N,N],[13,"TextOffset",E,"Sets the offset of the label in characters",7,N],[13,"Font",E,"Sets the font of the label. The string specifies the font…",7,N],[13,"TextColor",E,"Sets the color of the label text. The passed string can be…",7,N],[13,"Rotate",E,"Rotates the label by a certain number of degrees",7,N],[13,"TextAlign",E,"Sets the horizontal alignment of the label text (default…",7,N],[13,"MarkerSymbol",E,"Sets a marker for the label. By default no marker is…",7,N],[13,"MarkerColor",E,"Sets the color of the marker. The passed string can be a…",7,N],[13,"MarkerSize",E,"Sets the size of the marker. The size acts as a…",7,N],[4,r_Qb,E,"An enumeration of axis tick options",N,N],[13,"OnAxis",E,"Specifies whether the ticks are drawn at the borders of…",8,N],[13,"Mirror",E,r_ba,8,N],[13,"Inward",E,r_ba,8,N],[13,"MinorScale",E,"Sets the scale of the minor ticks",8,N],[13,"MajorScale",E,"Sets the scale of the major ticks",8,N],[13,"Format",E,"Format of the tick labels, e.g. \"%.1f ms\" will produces…",8,N],[4,"Tick",E,"Specifies a type of axis tick",N,N],[13,"Major",E,"Major ticks have position and an optional label. The label…",9,N],[13,"Minor",E,"Minor ticks only have position",9,N],[4,r_Rb,E,"Plot border locations",N,N],[13,"Bottom",E,E,10,N],[13,"Left",E,E,10,N],[13,"Top",E,E,10,N],[13,"Right",E,E,10,N],[4,r_Sb,E,"Plot margins",N,N],[13,"MarginTop",E,E,11,N],[13,"MarginBottom",E,E,11,N],[13,"MarginLeft",E,E,11,N],[13,"MarginRight",E,E,11,N],[4,r_Tb,E,"Legend options",N,N],[13,"Reverse",E,"Puts curve samples to the left of the label",12,N],[13,"Invert",E,"Displays legend entries in opposite order",12,N],[13,"Horizontal",E,"Makes the legend horizontal (default is vertical)",12,N],[13,"Placement",E,"Specifies the location of the legend. The first argument…",12,N],[13,"Title",E,"Title of the legend",12,N],[13,"MaxRows",E,"Specifies the maximum number of rows, when the legend is…",12,N],[13,"MaxCols",E,"Specifies the maximum number of columns, when the legend…",12,N],[4,r_Ub,E,"Specifies how the contours are drawn",N,N],[13,"Linear",E,"Draw lines between points of equal value",13,N],[13,"Cubic",E,"Draw somewhat smoother curves between points with equal…",13,N],[13,"Spline",E,"Draw an even smoother curve, this time approximating the…",13,N],[4,r_Vb,E,"Specifies what sort of palette to use",N,N],[13,"Gray",E,"Use a gray palette with a specified gamma",14,N],[13,"Formula",E,"Use a palette with that uses a predefined formula for each…",14,N],[13,"CubeHelix",E,"Use a cube helix palette, with a certain start (in…",14,N],[11,"set_border",E,"Sets the properties of the plot border",15,N],[11,"set_x_axis",E,"Sets the properties of x axis.",15,N],[11,"set_y_axis",E,"Like `set_x_axis` but for the y axis.",15,N],[11,"arrow",E,"Adds an arrow to the plot. The arrow is drawn from `(x1,…",15,N],[11,"set_legend",E,"Specifies the location and other properties of the legend…",15,N],[11,r_ea,E,"Plot a 2D scatter-plot with lines connecting each data…",15,N],[11,r_da,E,r_ca,15,N],[11,r_fa,E,r_ga,15,N],[11,"x_error_bars",E,r_ca,15,N],[11,"y_error_bars",E,r_ca,15,N],[11,"x_error_lines",E,r_ca,15,N],[11,"y_error_lines",E,r_ca,15,N],[11,"fill_between",E,"Plot a 2D scatter-plot of two curves (bound by `y_lo` and…",15,N],[11,"boxes",E,"Plot a 2D scatter-plot using boxes of automatic width. Box…",15,N],[11,"boxes_set_width",E,"Plot a 2D scatter-plot using boxes of set (per box) width.…",15,N],[11,"box_and_whisker",E,"Plot a 2D box-and-whisker plot using boxes of automatic…",15,N],[11,"box_and_whisker_set_width",E,"Plot a 2D box-and-whisker plot using boxes of set width.",15,N],[11,"image",E,"Draws an image from a rectangular array of data by…",15,N],[11,"surface",E,"Draws a 3D surface from a rectangular array of data by…",16,N],[11,r_da,E,"Plot a 3D scatter-plot with a point standing in for each…",16,N],[11,r_ea,E,"Plot a 3D scatter-plot with lines connecting each data…",16,N],[11,r_fa,E,r_ga,16,N],[11,"set_view",E,"Sets the 3D view.",16,[[[r_ha],[r_oa],[r_oa]],[r_ha]]],[11,"set_view_map",E,"Sets the view to be a map. Useful for images and contour…",16,[[[r_ha]],[r_ha]]],[11,"set_z_label",E,"Set the label for the Z axis",16,N],[11,"set_z_ticks",E,"Like `set_x_ticks` but for the Z axis.",16,N],[11,"set_z_ticks_custom",E,r_pa,16,N],[11,"set_z_range",E,"Set the range of values for the Z axis",16,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,"set_z_reverse",E,"Sets z axis to reverse.",16,[[[r_ha],[r_ja]],[r_ha]]],[11,"set_z_log",E,"Sets the Z axis be logarithmic. Note that the range must…",16,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,"set_z_grid",E,"Shows the grid on the Z axis.",16,[[[r_ha],[r_ja]],[r_ha]]],[11,"set_z_time",E,"Sets the Z axis be time. Note that the range must be…",16,[[[r_ha],[r_ja]],[r_ha]]],[11,"show_contours",E,"Show contours (lines of equal Z value) at automatically…",16,[[[r_ha],[r_ja],[r_ja],[r_ka],[r_ia,["str"]],[r_ia,[r_Ga]]],[r_ha]]],[11,"show_contours_custom",E,"Show contours (lines of equal Z value) at specific levels.",16,[[[r_ha],[r_ja],[r_ja],[r_ka],[r_ia,["str"]],["tc"]],[r_ha]]],[11,"new",E,"Creates a new figure",17,[[],[r_la]]],[11,"set_terminal",E,"Sets the terminal for gnuplot to use, as well as the file…",17,[[[r_ha],["str"],["str"]],[r_la]]],[11,r_ma,E,"Creates a set of 2D axes",17,[[[r_ha]],[r_ma]]],[11,r_na,E,"Creates a set of 3D axes",17,[[[r_ha]],[r_na]]],[11,"show",E,"Launch a gnuplot process, if it hasn't been spawned…",17,[[[r_ha]],[r_la]]],[11,"clear_axes",E,"Clears all axes on this figure.",17,[[[r_ha]],[r_la]]],[11,"echo",E,"Echo the commands that if piped to a gnuplot process would…",17,[[[r_ha],[T]],[r_la]]],[11,"echo_to_file",E,"Save to a file the the commands that if piped to a gnuplot…",17,[[[r_ha],["str"]],[r_la]]],[11,"to_int",E,E,4,[[[r_ha]],["i32"]]],[11,"map",E,"Same as `Option::map`",6,[[[r_ha],["f"]],[r_ia]]],[17,"GRAY",E,"A gray palette",N,N],[17,"COLOR",E,"Default Gnuplot palette",N,N],[17,"RAINBOW",E,"Classic rainbow palette with terrible perceptual properties",N,N],[17,"HOT",E,"A black body palette",N,N],[17,"HELIX",E,"A nice default for a cube helix",N,N],[8,r_Zb,E,E,N,N],[11,r_Ea,E,r_Fa,18,[[[r_ha],[r_Ga],[r_Ga],[r_Ga]],[r_ha]]],[11,r_Ha,E,r_Ia,18,[[[r_ha],[r_oa],[r_oa]],[r_ha]]],[11,r_Ja,E,r_Ka,18,[[[r_ha],[r_oa],[r_oa]],[r_ha]]],[11,r_La,E,r_Ma,18,[[[r_ha],[r_ia,[r_oa]]],[r_ha]]],[11,r_Na,E,r_Oa,18,N],[11,r_Pa,E,r_Qa,18,N],[11,r_Ra,E,r_Sa,18,N],[11,r_Ta,E,r_Ua,18,N],[11,r_Va,E,r_Wa,18,N],[11,r_Xa,E,r_Ya,18,N],[11,r_Za,E,r_0a,18,N],[11,r_1a,E,r_2a,18,N],[11,r_3a,E,r_4a,18,N],[11,r_5a,E,r_pa,18,N],[11,r_6a,E,r_7a,18,N],[11,r_8a,E,r_9a,18,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,r_ab,E,r_bb,18,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,r_cb,E,r_db,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_eb,E,r_fb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_gb,E,r_hb,18,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,r_ib,E,r_jb,18,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,r_kb,E,r_lb,18,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,r_mb,E,r_nb,18,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,r_ob,E,r_pb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_qb,E,r_rb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_sb,E,r_tb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_ub,E,r_vb,18,N],[11,r_wb,E,r_xb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_yb,E,r_zb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_Ab,E,r_Bb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_Cb,E,r_Db,18,N],[11,r_Eb,E,r_Fb,18,[[[r_ha],[r_Da]],[r_ha]]],[11,r_Gb,E,r_Hb,18,[[[r_ha],[T]],[r_ha]]],[8,r_0b,E,E,N,N],[10,"get",E,E,19,[[[r_ha]],[r_oa]]],[11,r_ya,E,E,15,[[[T]],[T]]],[11,r_za,E,E,15,[[[r_ha]],[U]]],[11,r_sa,E,E,15,[[[U]],[r_ra]]],[11,r_ta,E,E,15,[[[r_ha]],[T]]],[11,r_ua,E,E,15,[[[r_ha]],[T]]],[11,r_va,E,E,15,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,15,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,16,[[[T]],[T]]],[11,r_za,E,E,16,[[[r_ha]],[U]]],[11,r_sa,E,E,16,[[[U]],[r_ra]]],[11,r_ta,E,E,16,[[[r_ha]],[T]]],[11,r_ua,E,E,16,[[[r_ha]],[T]]],[11,r_va,E,E,16,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,16,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,17,[[[T]],[T]]],[11,r_za,E,E,17,[[[r_ha]],[U]]],[11,r_sa,E,E,17,[[[U]],[r_ra]]],[11,r_ta,E,E,17,[[[r_ha]],[T]]],[11,r_ua,E,E,17,[[[r_ha]],[T]]],[11,r_va,E,E,17,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,17,[[[r_ha]],[r_xa]]],[11,"to_string",E,E,0,[[[r_ha]],["string"]]],[11,r_ya,E,E,0,[[[T]],[T]]],[11,r_za,E,E,0,[[[r_ha]],[U]]],[11,r_Aa,E,E,0,[[[r_ha]],[T]]],[11,r_Ba,E,E,0,N],[11,r_sa,E,E,0,[[[U]],[r_ra]]],[11,r_ta,E,E,0,[[[r_ha]],[T]]],[11,r_ua,E,E,0,[[[r_ha]],[T]]],[11,r_va,E,E,0,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,0,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,1,[[[T]],[T]]],[11,r_za,E,E,1,[[[r_ha]],[U]]],[11,r_Aa,E,E,1,[[[r_ha]],[T]]],[11,r_Ba,E,E,1,N],[11,r_sa,E,E,1,[[[U]],[r_ra]]],[11,r_ta,E,E,1,[[[r_ha]],[T]]],[11,r_ua,E,E,1,[[[r_ha]],[T]]],[11,r_va,E,E,1,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,1,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,2,[[[T]],[T]]],[11,r_za,E,E,2,[[[r_ha]],[U]]],[11,r_Aa,E,E,2,[[[r_ha]],[T]]],[11,r_Ba,E,E,2,N],[11,r_sa,E,E,2,[[[U]],[r_ra]]],[11,r_ta,E,E,2,[[[r_ha]],[T]]],[11,r_ua,E,E,2,[[[r_ha]],[T]]],[11,r_va,E,E,2,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,2,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,3,[[[T]],[T]]],[11,r_za,E,E,3,[[[r_ha]],[U]]],[11,r_Aa,E,E,3,[[[r_ha]],[T]]],[11,r_Ba,E,E,3,N],[11,r_sa,E,E,3,[[[U]],[r_ra]]],[11,r_ta,E,E,3,[[[r_ha]],[T]]],[11,r_ua,E,E,3,[[[r_ha]],[T]]],[11,r_va,E,E,3,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,3,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,4,[[[T]],[T]]],[11,r_za,E,E,4,[[[r_ha]],[U]]],[11,r_Aa,E,E,4,[[[r_ha]],[T]]],[11,r_Ba,E,E,4,N],[11,r_sa,E,E,4,[[[U]],[r_ra]]],[11,r_ta,E,E,4,[[[r_ha]],[T]]],[11,r_ua,E,E,4,[[[r_ha]],[T]]],[11,r_va,E,E,4,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,4,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,5,[[[T]],[T]]],[11,r_za,E,E,5,[[[r_ha]],[U]]],[11,r_Aa,E,E,5,[[[r_ha]],[T]]],[11,r_Ba,E,E,5,N],[11,r_sa,E,E,5,[[[U]],[r_ra]]],[11,r_ta,E,E,5,[[[r_ha]],[T]]],[11,r_ua,E,E,5,[[[r_ha]],[T]]],[11,r_va,E,E,5,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,5,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,6,[[[T]],[T]]],[11,r_za,E,E,6,[[[r_ha]],[U]]],[11,r_Aa,E,E,6,[[[r_ha]],[T]]],[11,r_Ba,E,E,6,N],[11,r_sa,E,E,6,[[[U]],[r_ra]]],[11,r_ta,E,E,6,[[[r_ha]],[T]]],[11,r_ua,E,E,6,[[[r_ha]],[T]]],[11,r_va,E,E,6,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,6,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,7,[[[T]],[T]]],[11,r_za,E,E,7,[[[r_ha]],[U]]],[11,r_Aa,E,E,7,[[[r_ha]],[T]]],[11,r_Ba,E,E,7,N],[11,r_sa,E,E,7,[[[U]],[r_ra]]],[11,r_ta,E,E,7,[[[r_ha]],[T]]],[11,r_ua,E,E,7,[[[r_ha]],[T]]],[11,r_va,E,E,7,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,7,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,8,[[[T]],[T]]],[11,r_za,E,E,8,[[[r_ha]],[U]]],[11,r_Aa,E,E,8,[[[r_ha]],[T]]],[11,r_Ba,E,E,8,N],[11,r_sa,E,E,8,[[[U]],[r_ra]]],[11,r_ta,E,E,8,[[[r_ha]],[T]]],[11,r_ua,E,E,8,[[[r_ha]],[T]]],[11,r_va,E,E,8,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,8,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,9,[[[T]],[T]]],[11,r_za,E,E,9,[[[r_ha]],[U]]],[11,r_sa,E,E,9,[[[U]],[r_ra]]],[11,r_ta,E,E,9,[[[r_ha]],[T]]],[11,r_ua,E,E,9,[[[r_ha]],[T]]],[11,r_va,E,E,9,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,9,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,10,[[[T]],[T]]],[11,r_za,E,E,10,[[[r_ha]],[U]]],[11,r_Aa,E,E,10,[[[r_ha]],[T]]],[11,r_Ba,E,E,10,N],[11,r_sa,E,E,10,[[[U]],[r_ra]]],[11,r_ta,E,E,10,[[[r_ha]],[T]]],[11,r_ua,E,E,10,[[[r_ha]],[T]]],[11,r_va,E,E,10,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,10,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,11,[[[T]],[T]]],[11,r_za,E,E,11,[[[r_ha]],[U]]],[11,r_Aa,E,E,11,[[[r_ha]],[T]]],[11,r_Ba,E,E,11,N],[11,r_sa,E,E,11,[[[U]],[r_ra]]],[11,r_ta,E,E,11,[[[r_ha]],[T]]],[11,r_ua,E,E,11,[[[r_ha]],[T]]],[11,r_va,E,E,11,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,11,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,12,[[[T]],[T]]],[11,r_za,E,E,12,[[[r_ha]],[U]]],[11,r_Aa,E,E,12,[[[r_ha]],[T]]],[11,r_Ba,E,E,12,N],[11,r_sa,E,E,12,[[[U]],[r_ra]]],[11,r_ta,E,E,12,[[[r_ha]],[T]]],[11,r_ua,E,E,12,[[[r_ha]],[T]]],[11,r_va,E,E,12,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,12,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,13,[[[T]],[T]]],[11,r_za,E,E,13,[[[r_ha]],[U]]],[11,r_Aa,E,E,13,[[[r_ha]],[T]]],[11,r_Ba,E,E,13,N],[11,r_sa,E,E,13,[[[U]],[r_ra]]],[11,r_ta,E,E,13,[[[r_ha]],[T]]],[11,r_ua,E,E,13,[[[r_ha]],[T]]],[11,r_va,E,E,13,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,13,[[[r_ha]],[r_xa]]],[11,r_ya,E,E,14,[[[T]],[T]]],[11,r_za,E,E,14,[[[r_ha]],[U]]],[11,r_Aa,E,E,14,[[[r_ha]],[T]]],[11,r_Ba,E,E,14,N],[11,r_sa,E,E,14,[[[U]],[r_ra]]],[11,r_ta,E,E,14,[[[r_ha]],[T]]],[11,r_ua,E,E,14,[[[r_ha]],[T]]],[11,r_va,E,E,14,[[[r_ha]],[r_ra]]],[11,r_wa,E,E,14,[[[r_ha]],[r_xa]]],[11,r_Ca,E,E,0,[[[r_ha]],["coordinate"]]],[11,r_Ca,E,E,1,[[[r_ha]],["plotoption"]]],[11,r_Ca,E,E,2,[[[r_ha]],["fillregiontype"]]],[11,r_Ca,E,E,3,[[[r_ha]],["aligntype"]]],[11,r_Ca,E,E,4,[[[r_ha]],["dashtype"]]],[11,r_Ca,E,E,5,[[[r_ha]],["arrowheadtype"]]],[11,r_Ca,E,E,6,[[[r_ha]],[r_ia]]],[11,r_Ca,E,E,7,[[[r_ha]],["labeloption"]]],[11,r_Ca,E,E,8,[[[r_ha]],["tickoption"]]],[11,r_Ca,E,E,10,[[[r_ha]],["borderlocation2d"]]],[11,r_Ca,E,E,11,[[[r_ha]],["marginside"]]],[11,r_Ca,E,E,12,[[[r_ha]],["legendoption"]]],[11,r_Ca,E,E,13,[[[r_ha]],[r_ka]]],[11,r_Ca,E,E,14,[[[r_ha]],[r_Da]]],[11,"fmt",E,E,0,[[[r_ha],["formatter"]],[r_ra]]],[11,r_Ea,E,r_Fa,18,[[[r_ha],[r_Ga],[r_Ga],[r_Ga]],[r_ha]]],[11,r_Ha,E,r_Ia,18,[[[r_ha],[r_oa],[r_oa]],[r_ha]]],[11,r_Ja,E,r_Ka,18,[[[r_ha],[r_oa],[r_oa]],[r_ha]]],[11,r_La,E,r_Ma,18,[[[r_ha],[r_ia,[r_oa]]],[r_ha]]],[11,r_Na,E,r_Oa,18,N],[11,r_Pa,E,r_Qa,18,N],[11,r_Ra,E,r_Sa,18,N],[11,r_Ta,E,r_Ua,18,N],[11,r_Va,E,r_Wa,18,N],[11,r_Xa,E,r_Ya,18,N],[11,r_Za,E,r_0a,18,N],[11,r_1a,E,r_2a,18,N],[11,r_3a,E,r_4a,18,N],[11,r_5a,E,r_pa,18,N],[11,r_6a,E,r_7a,18,N],[11,r_8a,E,r_9a,18,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,r_ab,E,r_bb,18,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,r_cb,E,r_db,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_eb,E,r_fb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_gb,E,r_hb,18,[[[r_ha],[r_ia,[r_oa]],[r_ia,[r_oa]]],[r_ha]]],[11,r_ib,E,r_jb,18,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,r_kb,E,r_lb,18,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,r_mb,E,r_nb,18,[[[r_ha],[r_qa,[r_oa]]],[r_ha]]],[11,r_ob,E,r_pb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_qb,E,r_rb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_sb,E,r_tb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_ub,E,r_vb,18,N],[11,r_wb,E,r_xb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_yb,E,r_zb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_Ab,E,r_Bb,18,[[[r_ha],[r_ja]],[r_ha]]],[11,r_Cb,E,r_Db,18,N],[11,r_Eb,E,r_Fb,18,[[[r_ha],[r_Da]],[r_ha]]],[11,r_Gb,E,r_Hb,18,[[[r_ha],[T]],[r_ha]]]],"p":[[4,r_Ib],[4,r_Jb],[4,r_Kb],[4,r_Lb],[4,r_Mb],[4,r_Nb],[4,r_Ob],[4,r_Pb],[4,r_Qb],[4,"Tick"],[4,r_Rb],[4,r_Sb],[4,r_Tb],[4,r_Ub],[4,r_Vb],[3,r_Wb],[3,r_Xb],[3,r_Yb],[8,r_Zb],[8,r_0b]]};
initSearch(searchIndex);addSearchOptions(searchIndex);